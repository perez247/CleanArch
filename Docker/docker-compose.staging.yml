version: "3.8"

volumes:
  postgres-data:
  infrastructure-data:

# Changes
# For stagging
# For testing a application online on a development server
services:

  postgres_image:
    image: postgres:13-alpine
    ports:
      - 5432:5432
    # Start the container with a eco_db, and password as the root users password
    environment: 
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  docker_frontend:
    image: userid/frontend_dev
    ports:
      - "4200:4200"

  docker_backend_api:
    image: userid/backend_dev
    environment:
      - DefaultConnection=${DefaultConnection}
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - AUTHORIZATION_TOKEN=${AUTHORIZATION_TOKEN}
      - HOSTNAME=${HOSTNAME}
      - SOCKET=${SOCKET}
      - DO_S3_BUCKET=${DO_S3_BUCKET}
      - EMAIL_SERVER=${EMAIL_SERVER}
    depends_on:
      - postgres_image
    ports:
      - "5000:5000"
    volumes:
      - infrastructure-data:/app/Infrastructure/Services/ApplicationFileServiceSection/FileLocalData

  # docker_notification_server:
  #   image: userid/notification_dev
  #   # restart: always
  #   ports:
  #     - "8880:8880"    
  #   environment:
  #     - SECRET=${AUTHORIZATION_TOKEN}
  #     - Port=8880

  docker_proxy_server:
    image: userid/nginx_dev
    # command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    restart: always
    ports:
      - "80:80"
    #   - "443:443"
    # volumes:
    #   - ./data/nginx/conf:/etc/nginx/conf.d
    #   - ./data/certbot/conf:/etc/letsencrypt
    #   - ./data/certbot/www:/var/www/certbot
    depends_on:
      - postgres_image
      - docker_backend_api
      - docker_notification_server
      - docker_frontend

  # certbot:
  #   image: certbot/certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  #   volumes:
  #     - ./data/certbot/conf:/etc/letsencrypt
  #     - ./data/certbot/www:/var/www/certbot

  # watchtower:
  #   image: containrrr/watchtower
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   command: --interval 30

  # Building api testing jenkins online

  